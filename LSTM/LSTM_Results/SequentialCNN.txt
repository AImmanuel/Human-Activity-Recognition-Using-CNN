name: "SequentialCNN"

layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 1 dim: 2 dim: 64 dim: 64 dim: 64 } }  # Input dimensions: [batch_size, channels, depth, height, width]
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
  }
}

layer {
  name: "bn1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "bn1"
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "bn1"
  top: "bn1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "bn1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
  }
}

layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "bn2"
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "bn2"
  top: "bn2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "bn2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
  }
}

layer {
  name: "bn3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "bn3"
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "bn3"
  top: "bn3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "bn3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
  }
}

layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "bn4"
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "bn4"
  top: "bn4"
}

layer {
  name: "pool4"
  type: "Pooling"
  bottom: "bn4"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "global_avg_pool"
  type: "Pooling"
  bottom: "pool4"
  top: "global_avg_pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "flatten"
  type: "Flatten"
  bottom: "global_avg_pool"
  top: "flatten"
}

layer {
  name: "lstm_input"
  type: "Reshape"
  bottom: "flatten"
  top: "lstm_input"
  reshape_param {
    shape { dim: 0 dim: 1 dim: -1 }
  }
}

layer {
  name: "lstm"
  type: "LSTM"
  bottom: "lstm_input"
  top: "lstm_output"
  recurrent_param {
    num_output: 128
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
  lstm_param {
    num_output: 128
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "dropout"
  type: "Dropout"
  bottom: "lstm_output"
  top: "dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "dropout"
  top: "fc"
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}

layer {
  name: "softmax"
  type: "Softmax"
  bottom: "fc"
  top: "softmax"
}

